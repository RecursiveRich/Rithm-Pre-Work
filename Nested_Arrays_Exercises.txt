Given the following array, write a function called printEvens that console.logs all of the even numbers

var nestedArr = [[1,2,3],[4,5,6],[7,8],[9,10,11,12]];

function printEvens() {
	for(var i = 0; i < nestedArr.length; i++) {
		for(var j = 0; j < nestedArr[i].length; j++) {
			if ( nestedArr[i][j] % 2 === 0 ) console.log( nestedArr[i][j] );
		}
	}
}

Given the following array, write a function called sumTotal returns the sum of all numbers in the array

var nestedArr = [[[1,2],[3,4]],[[5,6]]];

function sumTotal() {
	var sum = 0;
	for(var i=0; i<nestedArr.length; i++) {
		for(var j=0; j<nestedArr[i].length; j++) {
			for(var k=0; k<nestedArr[i][j].length; k++) {
			sum += nestedArr[i][j][k];
            }
		}
	}
	return sum;
}

---------

Write a function called rotate which takes an array and a number, and moves each element however many spaces the number is to the right. For the value at the end of the array, rotate should move it back to the beginning.
rotate([1,2,3], 1) // [3,1,2]
rotate([1,2,3], 2) // [2,3,1]
rotate([1,2,3], 3) // [1,2,3]

function rotate(arr, num) {
    var newArr = [];
    newArr.length = arr.length;
    for(var i = 0; i < arr.length; i++) {
        if ( i + num < newArr.length ) {
            newArr[i+num] = arr[i];
        } else { newArr[i+num-newArr.length] = arr[i];}
	}
    return newArr;
}


Write a function called makeXOGrid which takes in two parameters, rows and columns, and returns an array of arrays with the number of values in each subarray equal to the columns parameter and the number of subarrays equal to the rows parameter. The values in the sub-arrays should switch between "X" and "O".

makeXOGrid(3,3) 
/*/
[["X","O","X"],["O","X","O"],["X","O","X"]]
/*/

// Consulted solution to get the "toggle" idea for tracking X's and O's.

function makeXOGrid(num1, num2) {
    var ansArr = [];
    var toggle = 0;
    for(var i=0; i < num1; i++) {
        ansArr.push([]);
        for(var j=0; j < num2; j++) {
            if ( toggle % 2 === 0 ) {
            ansArr[i].push('X')
            } else { ansArr[i].push('O') }
        toggle++   
        debugger; 
        }
    }
    return ansArr;
}







